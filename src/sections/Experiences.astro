---
import Badge from "../components/Badge.astro"
import experiences from "../experiences.json"
---

<h2 class="bg-clip-text text-transparent font-extrabold bg-gradient-to-r from-pink-500 to-violet-500 text-center">
  Experiences
</h2>
<ul>
  {
    experiences.map(({ name, duration, description, technologies }, index) => (
      <li class="relative ml-4 pl-12 pb-12 before:absolute before:-left-px before:top-0 before:bottom-0 before:block before:w-[2px] before:bg-zinc-400 first:before:top-[1.25ch] last:before:bottom-auto last:before:h-[1ch]">
        <div class="experience-item -translate-x-4 opacity-0 transition-all duration-300">
          <h3 class="relative inline-block text-2xl font-bold">{name}</h3>
          <h4 class="text-zinc-400">{duration}</h4>
          <p class="mt-6 text-sm">
            <strong class="mr-2 text-zinc-600">Description:</strong> {description}
          </p>
          <p class="mt-4 flex flex-wrap items-baseline gap-2 text-sm">
            <strong class="text-zinc-600">Techologies:</strong>
            {technologies.map((tech: string) => (
              <Badge>{tech}</Badge>
            ))}
          </p>
        </div>

        {index === 0 ? (
          // Active
          <span class="absolute -left-2 top-[1ch] flex h-4 w-4 items-center justify-center">
            <span class="h-3 w-3 rounded-full bg-purple-500" />
            <span class="absolute h-full w-full animate-ping rounded-full bg-purple-400 opacity-75" />
          </span>
        ) : (
          <span class="absolute -left-2 top-[1ch] flex h-4 w-4 justify-center">
            <span class="h-3 w-3 rounded-full border border-zinc-400 bg-zinc-50" />
          </span>
        )}
      </li>
    ))
  }
</ul>

<script>
  const setAnimationState = ([entry]: IntersectionObserverEntry[]) => {
    if (entry.isIntersecting) {
      entry.target.classList.remove("opacity-0")
      entry.target.classList.remove("-translate-x-4")
    } else {
      entry.target.classList.add("opacity-0")
      entry.target.classList.add("-translate-x-4")
    }
  }

  Array.from(document.querySelectorAll(".experience-item")).map(elem => {
    new IntersectionObserver(setAnimationState, {
      rootMargin: `-0% 0% -0% 0%`,
      threshold: 0
    }).observe(elem)
  })
</script>
